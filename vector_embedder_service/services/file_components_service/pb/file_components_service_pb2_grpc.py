# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from . import file_components_service_pb2 as file__components__service__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FileComponentsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateFileComponents = channel.unary_stream(
                '/FileComponentsService/CreateFileComponents',
                request_serializer=file__components__service__pb2.RepositoryFilePaths.SerializeToString,
                response_deserializer=file__components__service__pb2.FileComponent.FromString,
                )
        self.GetFileComponents = channel.unary_stream(
                '/FileComponentsService/GetFileComponents',
                request_serializer=file__components__service__pb2.FileComponentIds.SerializeToString,
                response_deserializer=file__components__service__pb2.FileComponent.FromString,
                )
        self.DeleteFileComponentsByRepositoryId = channel.unary_unary(
                '/FileComponentsService/DeleteFileComponentsByRepositoryId',
                request_serializer=file__components__service__pb2.DeleteFileComponentsByRepositoryIdRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteFileComponentsByRepositoryIdAndFilePaths = channel.unary_unary(
                '/FileComponentsService/DeleteFileComponentsByRepositoryIdAndFilePaths',
                request_serializer=file__components__service__pb2.DeleteFileComponentsByRepositoryIdAndFilePathsRequest.SerializeToString,
                response_deserializer=file__components__service__pb2.FileComponentIds.FromString,
                )


class FileComponentsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateFileComponents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFileComponents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFileComponentsByRepositoryId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFileComponentsByRepositoryIdAndFilePaths(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FileComponentsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateFileComponents': grpc.unary_stream_rpc_method_handler(
                    servicer.CreateFileComponents,
                    request_deserializer=file__components__service__pb2.RepositoryFilePaths.FromString,
                    response_serializer=file__components__service__pb2.FileComponent.SerializeToString,
            ),
            'GetFileComponents': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFileComponents,
                    request_deserializer=file__components__service__pb2.FileComponentIds.FromString,
                    response_serializer=file__components__service__pb2.FileComponent.SerializeToString,
            ),
            'DeleteFileComponentsByRepositoryId': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFileComponentsByRepositoryId,
                    request_deserializer=file__components__service__pb2.DeleteFileComponentsByRepositoryIdRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteFileComponentsByRepositoryIdAndFilePaths': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFileComponentsByRepositoryIdAndFilePaths,
                    request_deserializer=file__components__service__pb2.DeleteFileComponentsByRepositoryIdAndFilePathsRequest.FromString,
                    response_serializer=file__components__service__pb2.FileComponentIds.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FileComponentsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FileComponentsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateFileComponents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FileComponentsService/CreateFileComponents',
            file__components__service__pb2.RepositoryFilePaths.SerializeToString,
            file__components__service__pb2.FileComponent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFileComponents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/FileComponentsService/GetFileComponents',
            file__components__service__pb2.FileComponentIds.SerializeToString,
            file__components__service__pb2.FileComponent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFileComponentsByRepositoryId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileComponentsService/DeleteFileComponentsByRepositoryId',
            file__components__service__pb2.DeleteFileComponentsByRepositoryIdRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteFileComponentsByRepositoryIdAndFilePaths(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/FileComponentsService/DeleteFileComponentsByRepositoryIdAndFilePaths',
            file__components__service__pb2.DeleteFileComponentsByRepositoryIdAndFilePathsRequest.SerializeToString,
            file__components__service__pb2.FileComponentIds.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
